{"version":3,"sources":["Components/Main/Users/Users.module.css","img/jpg/avatar.jpg","Components/Main/Main.module.css","Components/Main/PublishPost/PublishPost.module.css","Components/Main/Dialogs/DialogItem/DialogItem.module.css","Components/Main/PublishPost/PostedCard/PostedCard.module.css","Components/Main/Navigation/Navigation.module.css","Components/Main/UserCard/Initials/Initials.module.css","Components/Main/UserCard/UserCard.module.css","Components/Main/UserCard/AvatarPic/AvatarPic.module.css","Components/Header/Header.module.css","Components/Main/Dialogs/Dialogs.module.css","Components/Main/common/Preloader/Preloader.module.css","Components/Header/Logo/Logo.module.css","img/svg/logotype.svg","img/svg/doubleRingPreloader40.svg","Components/Main/Chat/Chat.module.css","serviceWorker.js","redux/profileReducer.js","redux/messagesReducer.js","redux/sidebarReducer.js","redux/usersReducer.js","redux/reduxStore.js","Components/Header/Logo/Logo.jsx","Components/Header/Header.jsx","Components/Main/Navigation/Navigation.jsx","Components/Main/Dialogs/DialogItem/DialogItem.jsx","Components/Main/Dialogs/Dialogs.jsx","Components/Main/Chat/Chat.jsx","Components/Main/Chat/ChatContainer.jsx","Components/Main/PublishPost/PostedCard/PostedCard.jsx","Components/Main/PublishPost/PublishPost.jsx","Components/Main/PublishPost/PublishPostContainer.jsx","Components/Main/Users/Users.jsx","Components/Main/common/Preloader/Preloader.js","Components/Main/Users/UsersContainer.jsx","Components/Main/UserCard/AvatarPic/AvatarPic.jsx","Components/Main/UserCard/Initials/Initials.jsx","Components/Main/UserCard/UserCard.jsx","Components/Main/UserCard/UserCardContainer.jsx","Components/Main/Main.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","postData","id","message","likesCount","newPostText","profile","profileReducer","state","action","type","newPost","newText","dialogsData","name","messagesData","isSelf","newMessageBody","messagesReducer","body","sidebarReducer","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","map","u","userId","followed","count","reducers","combineReducers","profilePage","messagesPage","sidebar","usersPage","store","createStore","Logo","className","styles","_homelink","href","src","Logosvg","alt","Header","_wrapper","_container","Navigation","_containerNav","_item","to","_itemLink","activeClassName","activeLink","_notifyCell","DialogItem","props","_containerGrid","_avatarBox","dialogAva","_avatarImg","photo","usernameBox","Dialogs","dialogsElements","dialog","key","_header","Chat","el","sender","msgCont","_selfMsgCell","msgAva","_selfAvaCell","_userMsgCell","_userAvaCell","_avaImg","userpic","newMsgBody","msgInputBox","value","onChange","e","target","updateNewMsgBody","placeholder","btnSendMsgBox","btnSendMsg","onClick","sendMessage","ChatContainer","connect","dispatch","updateNewMessageBodyCreator","PostedCard","_postParagraph","_postLikesCount","PublishPost","posts","newPostElement","React","createRef","_box","_textareaCell","ref","text","current","updateNewPostText","_buttonPub","addPost","PublishPostContainer","updateNewPostTextActionCreator","Users","pagesCount","Math","ceil","pages","i","push","_pagePanel","p","_selectedPage","onPageChanged","_usersBox1","_imgBox","_img","photos","small","avatarPic","_followBtnBox","unfollow","follow","_usersBox2","_personInfoBox1","status","_personInfoBox2","Preloader","_preloaderBox","preloader","_preloader","UsersContainer","pageNumber","setCurrentPage","toggleIsFetching","axios","then","response","setUsers","data","items","this","setTotalUsersCount","totalCount","Component","AvatarPic","userCard","_photo","large","Initials","_column","_username","_sepLine","_statusBox","_statusString","UserCard","wallpaper","_AvatarCol","_initialsCol","UserCardContainer","params","setUserProfile","withUrlDataContainerComponent","withRouter","Main","_LeftColumn","_UserCardColumn","path","component","render","_NarrowColumn","_WideColumn","App","rerenderEntireTree","ReactDOM","getState","bind","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.f534305c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"_usersBox2\":\"Users__usersBox2__3IRqk\",\"_imgBox\":\"Users__imgBox__2ckdf\",\"_img\":\"Users__img__pU4mp\",\"_pagePanel\":\"Users__pagePanel__p94zz\",\"_selectedPage\":\"Users__selectedPage__268hK\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.93a43109.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_wrapper\":\"Main__wrapper__3KhWN\",\"_container\":\"Main__container__zR9gb\",\"_LeftColumn\":\"Main__LeftColumn__2H_cG\",\"_UserCardColumn\":\"Main__UserCardColumn__1g21U\",\"_NarrowColumn\":\"Main__NarrowColumn__DG8jf\",\"_WideColumn\":\"Main__WideColumn__NmeeD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"PublishPost__container__263BV\",\"_box\":\"PublishPost__box__5NTH1\",\"_header\":\"PublishPost__header__2GwuU\",\"_containerGrid\":\"PublishPost__containerGrid__i0YZ_\",\"_textareaCell\":\"PublishPost__textareaCell__1WjNI\",\"_buttonPub\":\"PublishPost__buttonPub__1aanN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_containerGrid\":\"DialogItem__containerGrid__MJ1JW\",\"active\":\"DialogItem_active__AitXm\",\"_avatarBox\":\"DialogItem__avatarBox__SRWLZ\",\"_avatarImg\":\"DialogItem__avatarImg__2X2bU\",\"dialogAva\":\"DialogItem_dialogAva__Devnp\",\"usernameBox\":\"DialogItem_usernameBox__2oLL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"PostedCard__container__27-Yt\",\"_header\":\"PostedCard__header__3idbI\",\"_containerGrid\":\"PostedCard__containerGrid__3pRgu\",\"_postLikesCount\":\"PostedCard__postLikesCount__3aXEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_containerNav\":\"Navigation__containerNav__2StvC\",\"_item\":\"Navigation__item__1uVYi\",\"_itemLink\":\"Navigation__itemLink__2Y2lf\",\"activeLink\":\"Navigation_activeLink__1k0SY\",\"_notifyCell\":\"Navigation__notifyCell__2gZt6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_column\":\"Initials__column__3j-y3\",\"_username\":\"Initials__username__25FLQ\",\"_sepLine\":\"Initials__sepLine__3i_UQ\",\"_statusBox\":\"Initials__statusBox__2SZX2\",\"_statusString\":\"Initials__statusString__1izTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_containerGrid\":\"UserCard__containerGrid__1hAvt\",\"wallpaper\":\"UserCard_wallpaper__EftOv\",\"_AvatarCol\":\"UserCard__AvatarCol__2Bggv\",\"_initialsCol\":\"UserCard__initialsCol__MwlLx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_box\":\"AvatarPic__box__25PvT\",\"_photo\":\"AvatarPic__photo__1NTgY\",\"userCard\":\"AvatarPic_userCard__q9Y7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_wrapper\":\"Header__wrapper__2CCMG\",\"_container\":\"Header__container__2qyNq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"Dialogs__container__3zZ58\",\"_header\":\"Dialogs__header__10hOP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_preloaderBox\":\"Preloader__preloaderBox__3XvYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_homelink\":\"Logo__homelink__2c31_\"};","module.exports = __webpack_public_path__ + \"static/media/logotype.d56e57dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/doubleRingPreloader40.9b0765f6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"Chat__container__3wIQ1\",\"_header\":\"Chat__header__ubSM8\",\"_containerGrid\":\"Chat__containerGrid__3Jl2y\",\"_selfAvaCell\":\"Chat__selfAvaCell__1Bh4w\",\"_userAvaCell\":\"Chat__userAvaCell__giSDu\",\"_avaImg\":\"Chat__avaImg__2dO44\",\"_userMsgCell\":\"Chat__userMsgCell__2WT5Z\",\"_selfMsgCell\":\"Chat__selfMsgCell__2YjxY\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s, my first post', likesCount: 11},\r\n        {id: 3, message: 'Hi, какой-то пост', likesCount: 15},\r\n    ],\r\n    newPostText: 'it-incubator',\r\n    profile: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {id: 5, message: state.newPostText, likesCount: 0};\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText,\r\n            };\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const updateNewPostTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    }\r\n};\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile: profile});\r\n\r\nexport default profileReducer;\r\n\r\n","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Nikita'},\r\n        {id: 2, name: 'Vladimir'},\r\n        {id: 3, name: 'Misha'},\r\n        {id: 4, name: 'Sergey'},\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: 'Hi', isSelf: false},\r\n        {id: 2, message: 'How is your it-kamasutra?', isSelf: true},\r\n        {id: 3, message: 'Yo', isSelf: false},\r\n        {id: 4, message: 'Hi', isSelf: true},\r\n        {id: 5, message: 'Hi', isSelf: false},\r\n        {id: 6, message: 'Hi', isSelf: true},\r\n        {id: 6, message: 'dfsdf', isSelf: false},\r\n        {id: 6, message: 'Hi', isSelf: true},\r\n    ],\r\n    newMessageBody: \"\"\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messagesData: [...state.messagesData, {id: 6, message: body, isSelf: true}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE})\r\nexport const updateNewMessageBodyCreator = (body) => {\r\n    return {type: UPDATE_NEW_MESSAGE_BODY, body: body}\r\n};\r\n\r\nexport default messagesReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    newPostText: '',\r\n    isFetching: true,\r\n    profile: null\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u => {\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    } return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u => {\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    } return u;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {...state,\r\n                users: action.users\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\n\r\nexport default usersReducer;\r\n\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport styles from './Logo.module.css';\r\nimport Logosvg from '../../../img/svg/logotype.svg';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"Logo block block_inline\">\r\n            <a className={styles._homelink} href=\"#homelink\" id=\"homelink\">\r\n                <img src={Logosvg} alt=\"homelink\"/>\r\n                <span>Petfans</span>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport Logo from \"./Logo/Logo\";\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={'Header block'}>\r\n            <div className={styles._wrapper}>\r\n                <div className={styles._container}>\r\n                    <Logo/>\r\n                </div>\r\n            </div>\r\n        </header>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./Navigation.module.css\";\r\n\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <nav className=\"Navigation block\">\r\n            <ul className={styles._containerNav}>\r\n                <li className={styles._item}>\r\n                    <NavLink to='/profile' className={styles._itemLink} activeClassName={styles.activeLink}><span>Profile</span></NavLink>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <NavLink to='/dialogs' className={styles._itemLink} activeClassName={styles.activeLink}><span>Messages</span></NavLink>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <NavLink to='/users' className={styles._itemLink} activeClassName={styles.activeLink}><span>Users</span></NavLink>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <a className={styles._itemLink}><span>News</span></a>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <a className={styles._itemLink}><span>Music</span></a>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <a className={styles._itemLink}><span>Settings</span></a>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./DialogItem.module.css\";\r\nimport photo from \"./../../../../img/jpg/avatar.jpg\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"DialogItem block\">\r\n            <NavLink to={\"/dialogs/\" + props.id} className={styles._containerGrid}>\r\n                <div className={`${styles._avatarBox} ${styles.dialogAva}`}>\r\n                    <img className={styles._avatarImg} src={photo}/>\r\n                </div>\r\n                <div className={styles.usernameBox}>\r\n                    <span><strong>{props.name}</strong></span>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport styles from  \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsData.map ( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>)\r\n\r\n    return (\r\n      <div className=\"Dialogs block\">\r\n          <div className={styles._container}>\r\n              <h6 className={styles._header}>Диалоги</h6>\r\n              {dialogsElements}\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport styles from \"./Chat.module.css\";\r\nimport userpic from \"./../../../img/jpg/avatar.jpg\";\r\n\r\nconst Chat = (props) => {\r\n    let state = props.messagesPage;\r\n\r\n    let message = state.messagesData.map( (el)=> {\r\n\r\n        let sender = el.isSelf ?  {msgCont: styles._selfMsgCell, msgAva: styles._selfAvaCell}\r\n            : {msgCont: styles._userMsgCell, msgAva: styles._userAvaCell};\r\n\r\n        return (\r\n            <div className={styles._containerGrid}>\r\n                <div className={sender.msgAva}>\r\n                    <img className={styles._avaImg} src={userpic}/>\r\n                </div>\r\n                <div className={sender.msgCont}>\r\n                    <span>{el.message}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    let newMsgBody = state.newMessageBody;\r\n\r\n    let onSendMsgClick = () => {\r\n        props.sendMessage();\r\n    };\r\n\r\n    let onNewMsgChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMsgBody(body);\r\n    };\r\n    return (\r\n        <div className=\"Chat block\">\r\n            <div className={styles._container}>\r\n                <h6 className={styles._header}>Чат</h6>\r\n                {message}\r\n                <div className={styles._containerGrid}>\r\n                    <div className={styles.msgInputBox}>\r\n                        <textarea value={newMsgBody} onChange={onNewMsgChange} placeholder=\"Написать сообщение...\" />\r\n                    </div>\r\n                    <div className={styles.btnSendMsgBox}>\r\n                        <button className={styles.btnSendMsg} onClick={onSendMsgClick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;","import React from \"react\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"./../../../redux/messagesReducer\";\r\nimport Chat from \"./Chat\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        },\r\n        updateNewMsgBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        }\r\n    }\r\n};\r\n\r\nconst ChatContainer = connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n\r\nexport default ChatContainer;","import React from \"react\";\r\nimport styles from \"./PostedCard.module.css\";\r\n\r\nconst PostedCard = (props) => {\r\n    return (\r\n        <div className=\"PostedCard block\">\r\n            <div className={styles._container}>\r\n                <h6 className={styles._header}>Пост</h6>\r\n                <div className={styles._containerGrid}>\r\n                    <p className={styles._postParagraph}>\r\n                        {props.message}\r\n                    </p>\r\n                    <div className={styles._postLikesCount}>\r\n                        <span>Likes: {props.likesCount}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostedCard;","import React from \"react\";\r\nimport styles from \"./PublishPost.module.css\";\r\nimport PostedCard from \"./PostedCard/PostedCard\";\r\n\r\nconst PublishPost = (props) => {\r\n\r\n    let posts = props.postData.map( el => <PostedCard message={el.message} likesCount={el.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"PublishPost block\">\r\n            <div className={styles._container}>\r\n                <div className={styles._box}>\r\n                    <h6 className={styles._header}>Опубликовать пост</h6>\r\n                    <div className={styles._containerGrid}>\r\n                    <textarea className={styles._textareaCell}\r\n                              placeholder=\"Написать...\"\r\n                              ref={newPostElement}\r\n                              value={props.newPostText}\r\n                              onChange={onPostChange} />\r\n\r\n                        <button type=\"submit\" className={styles._buttonPub} onClick={onAddPost}>Написать</button>\r\n                    </div>\r\n                </div>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PublishPost;","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profileReducer\";\r\nimport PublishPost from \"./PublishPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        }\r\n    }\r\n};\r\n\r\nconst PublishPostContainer = connect(mapStateToProps, mapDispatchToProps)(PublishPost);\r\n\r\nexport default PublishPostContainer;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport avatarPic from './../../../img/jpg/avatar.jpg';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div className=\"Users block\">\r\n        <div className={styles._pagePanel}>\r\n\r\n            {pages.map( p => {\r\n                return <span className={props.currentPage === p && styles._selectedPage} onClick={(e) => {props.onPageChanged(p)}}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id} >\r\n                <div className={styles._usersBox1}>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                        <div className={styles._imgBox}>\r\n                            <img className={styles._img} alt=\"faceAvatar\" src={u.photos.small !== null ? u.photos.small : avatarPic}/>\r\n                        </div>\r\n                    </NavLink>\r\n                    <div className={styles._followBtnBox}>\r\n                        {u.followed\r\n                            ? <button onClick={ () => props.unfollow(u.id) }>FOLLOW</button>\r\n                            : <button onClick={ () => props.follow(u.id) }>UNFOLLOW</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={styles._usersBox2}>\r\n                    <div className={styles._personInfoBox1}>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </div>\r\n                    <div className={styles._personInfoBox2}>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\nimport preloader from './../../../../img/svg/doubleRingPreloader40.svg';\r\n\r\nconst Preloader = (props) => {\r\n    return <div className={styles._preloaderBox}>\r\n        <img src={preloader} className={styles._preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, setCurrentPage, setTotalUsersCount, setUsers, toggleIsFetching, unfollow} from '../../../redux/usersReducer';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        });\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching})(UsersContainer);","import React from \"react\";\r\nimport styles from \"./AvatarPic.module.css\";\r\nimport photo from \"./../../../../img/jpg/avatar.jpg\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nconst AvatarPic = (props) => {\r\n    if (!props.profile) {\r\n       return <Preloader />\r\n    }\r\n    return (\r\n        <div className=\"AvatarPic block\">\r\n            <div className={`${styles._box} ${styles.userCard}`}>\r\n                <img className={styles._photo} src={props.profile.photos.large} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AvatarPic;","import React from \"react\";\r\nimport styles from \"./Initials.module.css\";\r\n\r\nconst Initials = () => {\r\n    return (\r\n      <div className=\"Initials block\">\r\n          <div className={styles._column}>\r\n              <div className={styles._username}>\r\n                  <span>Nikita Levitski</span>\r\n              </div>\r\n              <hr className={styles._sepLine} />\r\n              <div className={styles._statusBox}>\r\n                  <span className={styles._statusString}>\r\n                      Junior Front-end developer (в мечтах)<br />Google Material Design UI React+Redux\r\n                  </span>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Initials;","import React from 'react';\r\nimport styles from './UserCard.module.css';\r\nimport AvatarPic from \"./AvatarPic/AvatarPic\";\r\nimport Initials from \"./Initials/Initials\";\r\n\r\n\r\nconst UserCard = (props) => {\r\n    return (\r\n        <div className=\"UserCard block\">\r\n            <div className={`${styles._containerGrid} ${styles.wallpaper}`}>\r\n                <div className={styles._AvatarCol}>\r\n                    <AvatarPic profile={props.profile}/>\r\n                </div>\r\n                <div className={styles._initialsCol}>\r\n                    <Initials/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserCard;\r\n\r\n","import React from 'react';\r\nimport UserCard from './UserCard';\r\nimport * as axios from 'axios';\r\nimport {connect} from \"react-redux\";\r\nimport {setUserProfile} from '../../../redux/profileReducer';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nclass UserCardContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {userId = 54}\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n            .then(response => {\r\n                this.props.setUserProfile(response.data);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <UserCard {...this.props} profile={this.props.profile} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile\r\n});\r\n\r\nlet withUrlDataContainerComponent = withRouter(UserCardContainer);\r\n\r\nexport default connect(mapStateToProps, {setUserProfile}) (withUrlDataContainerComponent);","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport styles from './Main.module.css';\r\nimport Navigation from \"./Navigation/Navigation\";\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport ChatContainer from \"./Chat/ChatContainer\";\r\nimport PublishPostContainer from \"./PublishPost/PublishPostContainer\";\r\nimport UsersContainer from \"./Users/UsersContainer\";\r\nimport UserCardContainer from \"./UserCard/UserCardContainer\";\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <main className=\"Main block\">\r\n            <div className={styles._wrapper}>\r\n                <div className={styles._container}>\r\n                    <div className={styles._LeftColumn}>\r\n                        <Navigation/>\r\n                    </div>\r\n                    <div className={styles._UserCardColumn}>\r\n                        <Route path='/profile/:userId?' component={UserCardContainer}/>\r\n                        <Route path='/users' render={() => <UsersContainer/>} />\r\n                    </div>\r\n                    <div className={styles._NarrowColumn}>\r\n                        <Route path='/dialogs' render={ () => <Dialogs store={props.store} dialogsData={props.state.messagesPage.dialogsData}/> } />\r\n                    </div>\r\n                    <div className={styles._WideColumn}>\r\n                        <Route path='/dialogs' render={ () => <ChatContainer messagesPage={props.state.messagesPage} store={props.store} dispatch={props.dispatch}/> } />\r\n                        <Route path='/profile' render={ () => <PublishPostContainer\r\n                            postData={props.state.profilePage.postData}\r\n                            newPostText={props.state.profilePage.newPostText}\r\n                            dispatch={props.dispatch}\r\n                            store={props.store}\r\n                        />}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport Main from \"./Components/Main/Main\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst App = (props) => {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Header/>\n                <Main state={props.state} store={props.store} dispatch={props.dispatch} updateNewPostText={props.updateNewPostText}/>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/reduxStore\";\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\n\nlet rerenderEntireTree = (state) => {\n\n    ReactDOM.render(\n        <Provider store={store}>\n        <App state={store.getState()} dispatch={store.dispatch.bind(store)} store={store} />\n        </Provider>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(rerenderEntireTree);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}