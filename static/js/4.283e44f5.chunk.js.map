{"version":3,"sources":["Components/Main/PublishPost/PublishPost.module.css","Components/Main/PublishPost/PostedCard/PostedCard.module.css","Components/Main/PublishPost/PostedCard/PostedCard.jsx","Components/Main/PublishPost/PublishPost.jsx","Components/Main/PublishPost/PublishPostContainer.jsx"],"names":["module","exports","PostedCard","props","className","styles","_container","_header","_containerGrid","_postParagraph","message","_postLikesCount","likesCount","PublishPost","React","memo","posts","postData","map","el","_box","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","_textareaCell","validate","required","placeholder","type","_buttonPub","PublishPostContainer","connect","state","profilePage","dispatch","addPostActionCreator"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,WAAa,gCAAgC,KAAO,0BAA0B,QAAU,6BAA6B,eAAiB,oCAAoC,cAAgB,mCAAmC,WAAa,kC,oBCA5PD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,QAAU,4BAA4B,eAAiB,mCAAmC,gBAAkB,sC,yGCoB3JC,EAlBI,SAACC,GAChB,OACI,yBAAKC,UAAU,oBACX,yBAAKA,UAAWC,IAAOC,YACnB,wBAAIF,UAAWC,IAAOE,SAAtB,4BACA,yBAAKH,UAAWC,IAAOG,gBACnB,uBAAGJ,UAAWC,IAAOI,gBAChBN,EAAMO,SAEX,yBAAKN,UAAWC,IAAOM,iBACnB,wCAAcR,EAAMS,iB,iCCNtCC,EAAcC,IAAMC,MAAK,SAACZ,GAE5B,IAAIa,EAAQb,EAAMc,SAASC,KAAK,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAYT,QAASS,EAAGT,QAASE,WAAYO,EAAGP,gBAMtF,OAEI,yBAAKR,UAAU,qBACX,yBAAKA,UAAWC,IAAOC,YACnB,yBAAKF,UAAWC,IAAOe,MACnB,wBAAIhB,UAAWC,IAAOE,SAAtB,qGACA,kBAACc,EAAD,CAAqBC,SAVrB,SAACC,GACbpB,EAAMqB,QAAQD,EAAOE,iBAWZT,OAUXU,EAAcC,YAAiB,IAY/BN,EAAsBO,YAAU,CAACC,KAAM,yBAAjBD,EAVL,SAACzB,GAEpB,OACI,0BAAMC,UAAWC,IAAOG,eAAgBc,SAAUnB,EAAM2B,cACpD,kBAACC,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWC,IAAU9B,UAAWC,IAAO8B,cAAeC,SAAU,CAACC,IAAUX,GAAcY,YAAa,iBAChI,4BAAQC,KAAK,SAASnC,UAAWC,IAAOmC,YAAxC,wDAOG3B,I,QC3BT4B,EAAuBC,aAfL,SAACC,GACrB,MAAO,CACH1B,SAAU0B,EAAMC,YAAY3B,SAC5BQ,YAAakB,EAAMC,YAAYnB,gBAIZ,SAACoB,GACxB,MAAO,CACHrB,QAAS,SAACC,GACNoB,EAASC,YAAqBrB,QAKbiB,CAA6C7B,GAE3D4B","file":"static/js/4.283e44f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"PublishPost__container__263BV\",\"_box\":\"PublishPost__box__5NTH1\",\"_header\":\"PublishPost__header__2GwuU\",\"_containerGrid\":\"PublishPost__containerGrid__i0YZ_\",\"_textareaCell\":\"PublishPost__textareaCell__1WjNI\",\"_buttonPub\":\"PublishPost__buttonPub__1aanN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"PostedCard__container__27-Yt\",\"_header\":\"PostedCard__header__3idbI\",\"_containerGrid\":\"PostedCard__containerGrid__3pRgu\",\"_postLikesCount\":\"PostedCard__postLikesCount__3aXEU\"};","import React from \"react\";\r\nimport styles from \"./PostedCard.module.css\";\r\n\r\nconst PostedCard = (props) => {\r\n    return (\r\n        <div className=\"PostedCard block\">\r\n            <div className={styles._container}>\r\n                <h6 className={styles._header}>Пост</h6>\r\n                <div className={styles._containerGrid}>\r\n                    <p className={styles._postParagraph}>\r\n                        {props.message}\r\n                    </p>\r\n                    <div className={styles._postLikesCount}>\r\n                        <span>Likes: {props.likesCount}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostedCard;","import React from \"react\";\r\nimport styles from \"./PublishPost.module.css\";\r\nimport PostedCard from \"./PostedCard/PostedCard\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\nconst PublishPost = React.memo((props) => {\r\n\r\n    let posts = props.postData.map( el => <PostedCard message={el.message} likesCount={el.likesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"PublishPost block\">\r\n            <div className={styles._container}>\r\n                <div className={styles._box}>\r\n                    <h6 className={styles._header}>Опубликовать пост</h6>\r\n                    <AddNewPostFormRedux onSubmit={onAddPost} />\r\n                </div>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\nconst maxLength = max => value => {\r\n    debugger\r\n    return value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n\r\n    return (\r\n        <form className={styles._containerGrid} onSubmit={props.handleSubmit}>\r\n            <Field name=\"newPostText\" component={Textarea} className={styles._textareaCell} validate={[required, maxLength10]} placeholder={'Post message'}/>\r\n            <button type=\"submit\" className={styles._buttonPub} >Написать</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'}) (AddNewPostForm);\r\n\r\nexport default PublishPost;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport PublishPost from \"./PublishPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst PublishPostContainer = connect(mapStateToProps, mapDispatchToProps)(PublishPost);\r\n\r\nexport default PublishPostContainer;"],"sourceRoot":""}