{"version":3,"sources":["Components/Main/PublishPost/PublishPost.module.css","Components/Main/PublishPost/PostedCard/PostedCard.module.css","Components/Main/PublishPost/PostedCard/PostedCard.jsx","Components/Main/PublishPost/PublishPost.jsx","Components/Main/PublishPost/PublishPostContainer.jsx"],"names":["module","exports","PostedCard","props","className","styles","_container","_header","_containerGrid","_postParagraph","message","_postLikesCount","likesCount","PublishPost","React","memo","dispatch","useDispatch","posts","postData","map","el","key","id","_box","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reset","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","_textareaCell","validate","required","placeholder","type","_buttonPub","PublishPostContainer","connect","state","profilePage","actions","addPostActionCreator"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,WAAa,gCAAgC,KAAO,0BAA0B,QAAU,6BAA6B,eAAiB,oCAAoC,cAAgB,mCAAmC,WAAa,kC,oBCA5PD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,QAAU,4BAA4B,eAAiB,mCAAmC,gBAAkB,sC,yGCoB3JC,EAlBI,SAACC,GAChB,OACI,yBAAKC,UAAU,oBACX,yBAAKA,UAAWC,IAAOC,YACnB,wBAAIF,UAAWC,IAAOE,SAAtB,4BACA,yBAAKH,UAAWC,IAAOG,gBACnB,uBAAGJ,UAAWC,IAAOI,gBAChBN,EAAMO,SAEX,yBAAKN,UAAWC,IAAOM,iBACnB,wCAAcR,EAAMS,iB,iDCLtCC,EAAcC,IAAMC,MAAK,SAACZ,GAC5B,IAAMa,EAAWC,cAEbC,EAAQf,EAAMgB,SAASC,KAAK,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAGE,GAAIb,QAASW,EAAGX,QAASE,WAAYS,EAAGT,gBAOlG,OAEI,yBAAKR,UAAU,qBACX,yBAAKA,UAAWC,IAAOC,YACnB,yBAAKF,UAAWC,IAAOmB,MACnB,wBAAIpB,UAAWC,IAAOE,SAAtB,qGACA,kBAACkB,EAAD,CAAqBC,SAXrB,SAACC,GACbxB,EAAMyB,QAAQD,EAAOE,aACrBb,EAASc,YAAM,8BAWNZ,OAMXa,EAAcC,YAAiB,IAW/BP,EAAsBQ,YAAU,CAACC,KAAM,yBAAjBD,EATL,SAAC9B,GACpB,OACI,0BAAMC,UAAWC,IAAOG,eAAgBkB,SAAUvB,EAAMgC,cACpD,kBAACC,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWC,IAAUnC,UAAWC,IAAOmC,cAAeC,SAAU,CAACC,IAAUX,GAAcY,YAAa,iBAChI,4BAAQC,KAAK,SAASxC,UAAWC,IAAOwC,YAAxC,wDAOGhC,ICxBTiC,EAAuBC,aAfL,SAACC,GACrB,MAAO,CACH7B,SAAU6B,EAAMC,YAAY9B,SAC5BU,YAAamB,EAAMC,YAAYpB,gBAIZ,SAACb,GACxB,MAAO,CACHY,QAAS,SAACC,GACNb,EAASkC,IAAQC,qBAAqBtB,QAKrBkB,CAA6ClC,GAE3DiC","file":"static/js/4.7b1ff89b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"PublishPost__container__284GH\",\"_box\":\"PublishPost__box__1iGs1\",\"_header\":\"PublishPost__header__2SepN\",\"_containerGrid\":\"PublishPost__containerGrid__2gU4i\",\"_textareaCell\":\"PublishPost__textareaCell__2qam_\",\"_buttonPub\":\"PublishPost__buttonPub__2aDRi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"PostedCard__container__1sPHP\",\"_header\":\"PostedCard__header__3Aica\",\"_containerGrid\":\"PostedCard__containerGrid__16uSN\",\"_postLikesCount\":\"PostedCard__postLikesCount__kb7wY\"};","import React from \"react\";\r\nimport styles from \"./PostedCard.module.css\";\r\n\r\nconst PostedCard = (props) => {\r\n    return (\r\n        <div className=\"PostedCard block\">\r\n            <div className={styles._container}>\r\n                <h6 className={styles._header}>Пост</h6>\r\n                <div className={styles._containerGrid}>\r\n                    <p className={styles._postParagraph}>\r\n                        {props.message}\r\n                    </p>\r\n                    <div className={styles._postLikesCount}>\r\n                        <span>Likes: {props.likesCount}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostedCard;","import React from \"react\";\r\nimport styles from \"./PublishPost.module.css\";\r\nimport PostedCard from \"./PostedCard/PostedCard\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst PublishPost = React.memo((props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    let posts = props.postData.map( el => <PostedCard key={el.id} message={el.message} likesCount={el.likesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n        dispatch(reset('ProfileAddNewPostForm'));\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"PublishPost block\">\r\n            <div className={styles._container}>\r\n                <div className={styles._box}>\r\n                    <h6 className={styles._header}>Опубликовать пост</h6>\r\n                    <AddNewPostFormRedux onSubmit={onAddPost} />\r\n                </div>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n//test max length\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form className={styles._containerGrid} onSubmit={props.handleSubmit}>\r\n            <Field name=\"newPostText\" component={Textarea} className={styles._textareaCell} validate={[required, maxLength10]} placeholder={'Post message'}/>\r\n            <button type=\"submit\" className={styles._buttonPub} >Написать</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'}) (AddNewPostForm);\r\n\r\nexport default PublishPost;","import React from \"react\";\r\nimport {actions} from \"../../../redux/profileReducer\";\r\nimport PublishPost from \"./PublishPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(actions.addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst PublishPostContainer = connect(mapStateToProps, mapDispatchToProps)(PublishPost);\r\n\r\nexport default PublishPostContainer;"],"sourceRoot":""}