{"version":3,"sources":["api/api.ts","api/profile-api.ts","redux/profileReducer.ts","Components/Main/Navigation/Navigation.module.css","redux/messagesReducer.ts","Components/Header/Logo/Logo.module.css","img/svg/logotype.svg","img/svg/doubleRingPreloader40.svg","Components/Main/common/FormsControls/FormsControls.module.css","Components/Main/common/FormsControls/FormsControls.tsx","serviceWorker.js","redux/sidebarReducer.ts","utils/objectHelper.ts","api/users-api.ts","redux/usersReducer.ts","api/auth-api.ts","api/security-api.ts","redux/authReducer.ts","redux/mainReducer.ts","redux/reduxStore.ts","Components/Header/Logo/Logo.jsx","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Components/Main/Navigation/Navigation.jsx","Components/Main/Dialogs/DialogItem/DialogItem.jsx","Components/Main/Dialogs/Dialogs.jsx","Components/Main/common/Paginator/Paginator.tsx","Components/Main/Users/User.jsx","Components/Main/Users/Users.tsx","redux/usersSelectors.ts","Components/Main/Users/UsersContainer.tsx","Components/Main/Login/Login.tsx","hoc/withSuspense.js","Components/Main/Main.tsx","App.js","index.js","Components/Main/Users/Users.module.css","Components/Main/Main.module.css","Components/Main/common/Preloader/Preloader.js","Components/Main/Dialogs/DialogItem/DialogItem.module.css","utils/validators/validators.ts","Components/Main/common/Paginator/Paginator.module.css","img/jpg/avatar.jpg","Components/Header/Header.module.css","Components/Main/Dialogs/Dialogs.module.css","Components/Main/common/Preloader/Preloader.module.css"],"names":["ResultCodesEnum","ResultCodeForCaptchaEnum","instance","axios","create","withCredentials","baseURL","headers","profileAPI","userId","get","then","res","data","status","put","photoFile","formData","FormData","append","profile","initialState","postData","id","message","likesCount","newPostText","actions","addPostActionCreator","type","setStatus","deletePost","postId","setUserProfile","savePhotoSuccess","photos","getUserProfile","dispatch","a","getStatus","updateStatus","resultCode","Success","savePhoto","file","saveProfile","getState","auth","Error","stopSubmit","_error","messages","Promise","reject","profileReducer","state","action","newPost","filter","p","module","exports","dialogsData","name","messagesData","isSelf","sendMessage","newMessageBody","messagesReducer","body","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","_textareaCell","Input","_formStyles","createField","placeholder","validators","component","text","validate","_formMark","Boolean","window","location","hostname","match","sidebarReducer","updateObjectInArray","items","itemId","ObjPropName","newObjProps","map","u","usersAPI","getUsers","currentPage","pageSize","follow","post","unfollow","delete","users","totalUsersCount","isFetching","followingInProgress","count","_followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","authAPI","email","password","rememberMe","captcha","securityAPI","login","isAuth","captchaUrl","payload","getAuthUserData","meData","getCaptchaUrl","url","authReducer","initialized","mainReducer","rootReducers","combineReducers","profilePage","messagesPage","sidebar","usersPage","form","formReducer","main","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Logo","_homelink","href","src","Logosvg","alt","Header","_wrapper","_container","_loginBox","onClick","logout","to","HeaderContainer","this","React","Component","connect","Navigation","_containerNav","_item","_itemLink","activeClassName","activeLink","_notifyCell","DialogItem","_containerGrid","_avatarBox","dialogAva","_avatarImg","photo","usernameBox","Dialogs","dialogsElements","dialog","key","_header","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","_pagePanel","el","cn","selectedPage","pageNumber","e","User","user","_usersBox1","_imgBox","_img","small","avatarPic","_followBtnBox","disabled","some","_usersBox2","_personInfoBox1","_personInfoBox2","Users","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageTitle","Preloader","bind","page","totalCount","LoginReduxForm","reduxForm","handleSubmit","onSubmit","required","undefined","imgCaptcha","styles2","formSummaryError","CaptchaIsRequired","length","withSuspense","Suspense","fallback","UserCardContainer","lazy","PublishPostContainer","ChatContainer","Main","catchAllUnhandledErrors","alert","initializeMain","addEventListener","removeEventListener","_LeftColumn","_UserCardColumn","path","render","_NarrowColumn","_WideColumn","withRouter","promise","all","App","rerenderEntireTree","ReactDOM","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","console","_preloaderBox","preloader","_preloader","value","maxLengthCreator","max"],"mappings":"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","file":"static/js/main.e2701d70.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { UserType } from '../types/reduxTypes';\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': '83ff2ca7-a319-4045-8f15-c83797dc9c95'},\r\n});\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\nexport enum ResultCodeForCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type GetItemsType = {\r\n    items: UserType[]\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: string[]\r\n    resultCode: RC\r\n}","import {PhotosType, ProfileType} from '../types/reduxTypes';\r\nimport {instance, APIResponseType} from './api';\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId)\r\n            .then(res => res.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId)\r\n            .then(res => res.data);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>(`profile/status/`, {status})\r\n            .then(res => res.data);\r\n    },\r\n    savePhoto(photoFile: any) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile)\r\n        return instance.put<APIResponseType<PhotosType>>(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(res => res.data);\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<APIResponseType>(`profile`, profile)\r\n            .then(res => res.data);\r\n    }\r\n}","import {FormAction, stopSubmit} from 'redux-form';\r\nimport {PhotosType, ProfileType} from '../types/reduxTypes';\r\nimport {profileAPI} from '../api/profile-api';\r\nimport {ResultCodesEnum} from '../api/api';\r\nimport {BaseThunkType, InferActionsTypes} from './reduxStore';\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s, my first post', likesCount: 11},\r\n        {id: 3, message: 'Hi, какой-то пост', likesCount: 15},\r\n    ],\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    newPostText: '',\r\n}\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SN/PROFILE/ADD-POST': {\r\n            let newPost = {id: 5, message: action.newPostText, likesCount: 0};\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case 'SN/PROFILE/SET-STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        }\r\n        case 'SN/PROFILE/DELETE-POST':\r\n            return {\r\n                ...state,\r\n                postData: state.postData.filter(p => p.id !== action.postId)\r\n            };\r\n        case 'SN/PROFILE/SET_USER_PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case 'SN/PROFILE/SAVE-PHOTO-SUCCESS':\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newPostText: string) => ({type: 'SN/PROFILE/ADD-POST', newPostText} as const),\r\n    setStatus: (status: string) => ({type: 'SN/PROFILE/SET-STATUS', status} as const),\r\n    deletePost: (postId :number) => ({type: 'SN/PROFILE/DELETE-POST', postId} as const),\r\n    setUserProfile: (profile: ProfileType) => ({type: 'SN/PROFILE/SET_USER_PROFILE', profile: profile} as const),\r\n    savePhotoSuccess: (photos: PhotosType) => ({type: 'SN/PROFILE/SAVE-PHOTO-SUCCESS', photos} as const),\r\n}\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId);\r\n    dispatch(actions.setUserProfile(data));\r\n};\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId);\r\n    dispatch(actions.setStatus(data));\r\n}\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status);\r\n    if(data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(actions.setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file);\r\n    if(data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(actions.savePhotoSuccess(data.data));\r\n    }\r\n}\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    let data = await profileAPI.saveProfile(profile);\r\n\r\n    if(data.resultCode === ResultCodesEnum.Success) {\r\n        if(userId !== null) {\r\n            dispatch(getUserProfile(userId))\r\n        } else {\r\n            throw new Error(`UserId can't be null`)\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: data.messages[0]}));\r\n        return Promise.reject({_error: data.messages[0]})\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_containerNav\":\"Navigation__containerNav__2qdFV\",\"_item\":\"Navigation__item__U-Fr2\",\"_itemLink\":\"Navigation__itemLink__2kQ1F\",\"activeLink\":\"Navigation_activeLink__2hDA7\",\"_notifyCell\":\"Navigation__notifyCell__1r4rf\"};","import {InferActionsTypes} from './reduxStore';\r\n\r\ntype DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n    isSelf: boolean\r\n}\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Nikita'},\r\n        {id: 2, name: 'Vladimir'},\r\n        {id: 3, name: 'Misha'},\r\n        {id: 4, name: 'Sergey'},\r\n    ] as DialogType[],\r\n    messagesData: [\r\n        {id: 1, message: 'Hi', isSelf: false},\r\n        {id: 2, message: 'How is your it-kamasutra?', isSelf: true},\r\n        {id: 3, message: 'Yo', isSelf: false},\r\n        {id: 4, message: 'Hi', isSelf: true},\r\n        {id: 5, message: 'Hi', isSelf: false},\r\n        {id: 6, message: 'Hi', isSelf: true},\r\n        {id: 6, message: 'dfsdf', isSelf: false},\r\n        {id: 6, message: 'Hi', isSelf: true},\r\n    ] as MessageType[],\r\n};\r\n\r\nconst messagesReducer = (state: InitialStateType = initialState, action: ActionsType):InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/MESSAGES/SEND_MESSAGE':\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body, isSelf: true}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    sendMessage: (newMessageBody: string) => ({type: 'SN/MESSAGES/SEND_MESSAGE', newMessageBody} as const),\r\n}\r\n\r\n\r\nexport default messagesReducer;\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_homelink\":\"Logo__homelink__2gj9f\"};","module.exports = __webpack_public_path__ + \"static/media/logotype.d56e57dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/doubleRingPreloader40.9b0765f6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_error\":\"FormsControls__error__1M1C3\",\"_textareaCell\":\"FormsControls__textareaCell__j2DYr\",\"_formStyles\":\"FormsControls__formStyles__2OA8l\",\"_formMark\":\"FormsControls__formMark__3Mt9v\",\"_errorMsg\":\"FormsControls__errorMsg__1zlCX\",\"formSummaryError\":\"FormsControls_formSummaryError__36fa7\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport {FieldValidatorType} from '../../../../utils/validators/validators';\r\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps, WrappedFieldsProps} from 'redux-form';\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return(\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps} className={`${styles._textareaCell} ${meta.touched && meta.error ? styles._error : ''}`} />\r\n    </FormControl>\r\n}\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n    <input {...input} {...restProps} className={`${styles._formStyles} ${meta.touched && meta.error ? styles._error : ''}`} />\r\n    </FormControl>\r\n}\r\n\r\nexport function createField <FormKeysType extends string> (placeholder: string | undefined,\r\n                            name: FormKeysType,\r\n                            validators: FieldValidatorType[],\r\n                            component: React.FC<WrappedFieldProps>,\r\n                            props = {},\r\n                            text = '') {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/>\r\n            {text ? <span className={styles._formMark}>{text}</span>: null}\r\n        </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state:{} = initialState, action: any) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items: any, itemId: any, ObjPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {\r\n        if (u[ObjPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n\r\n","import {GetItemsType, instance, APIResponseType,} from './api';\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data);\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(res => res.data) as Promise<APIResponseType>\r\n    },\r\n}","import {updateObjectInArray} from '../utils/objectHelper';\r\nimport {UserType} from '../types/reduxTypes';\r\nimport {BaseThunkType, InferActionsTypes} from './reduxStore';\r\nimport {Dispatch} from 'redux';\r\nimport {usersAPI} from '../api/users-api';\r\n\r\nlet initialState = {\r\n    users: [] as UserType[],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>,\r\n}\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n        case 'SN/USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case 'SN/USERS/SET_USERS':\r\n            return {...state,\r\n                users: action.users\r\n            };\r\n        case 'SN/USERS/SET_CURRENT_PAGE':\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT':\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS':\r\n            debugger\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    followSuccess: (userId: number) => ({type: 'SN/USERS/FOLLOW', userId} as const),\r\n    unfollowSuccess: (userId: number) => ({type: 'SN/USERS/UNFOLLOW', userId} as const),\r\n    setUsers: (users: UserType[]) => ({type: 'SN/USERS/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'SN/USERS/SET_CURRENT_PAGE', currentPage} as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({type: 'SN/USERS/SET_TOTAL_USERS_COUNT', count: totalUsersCount} as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: 'SN/USERS/TOGGLE_IS_FETCHING', isFetching} as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId} as const),\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(actions.toggleIsFetching(true));\r\n        dispatch(actions.setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(actions.toggleIsFetching(false));\r\n        dispatch(actions.setUsers(data.items));\r\n        dispatch(actions.setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\nexport const _followUnfollowFlow = async (dispatch: Dispatch<ActionsType>,\r\n                                          userId: number,\r\n                                          apiMethod: any,\r\n                                          actionCreator: (userId: number) => ActionsType ) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(actions.toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        _followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), actions.followSuccess);\r\n    }\r\n};\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        _followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n\r\n\r\n","import {instance, APIResponseType, ResultCodeForCaptchaEnum, ResultCodesEnum} from './api';\r\n\r\ntype MeResponseData = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<APIResponseType<MeResponseData>>(`auth/me`)\r\n            .then(res => res.data);\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: null | string = null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType, ResultCodesEnum | ResultCodeForCaptchaEnum>>(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then(res => res.data);\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","import {APIResponseType, instance} from './api';\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`)\r\n            .then(res => res.data);\r\n    }\r\n}","import {ResultCodeForCaptchaEnum, ResultCodesEnum} from '../api/api';\r\nimport {FormAction, stopSubmit} from 'redux-form';\r\nimport {authAPI} from '../api/auth-api';\r\nimport {securityAPI} from '../api/security-api';\r\nimport {BaseThunkType, InferActionsTypes} from './reduxStore';\r\n\r\nconst SET_USER_DATA = 'SN/AUTH/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'SN/AUTH/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    email: null as string | null,\r\n    userId: null as (number | null),\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null, // if null, then captcha is not required\r\n}\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/AUTH/SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case 'SN/AUTH/GET_CAPTCHA_URL_SUCCESS':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst actions = {\r\n    setAuthUserData: (email: string | null, userId: number | null, login: string | null, isAuth: boolean) => {\r\n        return ({type: 'SN/AUTH/SET_USER_DATA', payload: {email, userId, login, isAuth}} as const);\r\n    },\r\n    getCaptchaUrlSuccess: (captchaUrl: string) => ({type: 'SN/AUTH/GET_CAPTCHA_URL_SUCCESS', payload: {captchaUrl}} as const),\r\n\r\n}\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n    let meData = await authAPI.me();\r\n        if(meData.resultCode === ResultCodesEnum.Success) {\r\n            let {email, id, login} = meData.data;\r\n            dispatch(actions.setAuthUserData(email, id, login, true));\r\n        }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe, captcha);\r\n        if(data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            if(data.resultCode === ResultCodeForCaptchaEnum.CaptchaIsRequired) {\r\n                dispatch(getCaptchaUrl())\r\n            } else {\r\n                let message = data.messages.length > 0 ? data.messages[0] : 'Some error';\r\n                dispatch(stopSubmit('login', {_error: message}));\r\n            }\r\n        }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = data.url;\r\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.logout();\r\n        if(data.data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(actions.setAuthUserData(null, null, null, false));\r\n        }\r\n}\r\n\r\nexport default authReducer;\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","import {getAuthUserData} from \"./authReducer\";\r\nimport {InferActionsTypes} from './reduxStore';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nconst mainReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/MAIN/INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({type: 'SN/MAIN/INITIALIZED_SUCCESS'} as const),\r\n}\r\n\r\nexport const initializeMain = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(()=> {\r\n        dispatch(actions.initializedSuccess());\r\n    });\r\n\r\n}\r\n\r\nexport default mainReducer;\r\n\r\n","import {Action, applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport messagesReducer from './messagesReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer';\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport mainReducer from \"./mainReducer\";\r\n\r\nlet rootReducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    main: mainReducer\r\n});\r\n\r\ntype RootReducersType = typeof rootReducers\r\nexport type AppStateType = ReturnType<RootReducersType>\r\n\r\nexport type InferActionsTypes<T> = T extends {[key: string]: (...args: any[]) => infer U} ? U : never\r\n\r\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport styles from './Logo.module.css';\r\nimport Logosvg from '../../../img/svg/logotype.svg';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"Logo block_inline\">\r\n            <a className={styles._homelink} href=\"#homelink\" id=\"homelink\">\r\n                <img src={Logosvg} alt=\"homelink\"/>\r\n                <span>Petfans</span>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport {NavLink, Route} from 'react-router-dom';\r\nimport Logo from \"./Logo/Logo\";\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={'Header block'}>\r\n            <div className={styles._wrapper}>\r\n                <div className={styles._container}>\r\n                    <Logo/>\r\n\r\n                    <div className={styles._loginBox}>\r\n                        {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log Out</button></div> : <NavLink to={'/login'}>Login</NavLink>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n\r\n\r\n});\r\n\r\nexport default connect(MapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./Navigation.module.css\";\r\n\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <nav className=\"Navigation block\">\r\n            <ul className={styles._containerNav}>\r\n                <li className={styles._item}>\r\n                    <NavLink to='/profile' className={styles._itemLink} activeClassName={styles.activeLink}><span>Profile</span></NavLink>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <NavLink to='/dialogs' className={styles._itemLink} activeClassName={styles.activeLink}><span>Messages</span></NavLink>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <NavLink to='/users' className={styles._itemLink} activeClassName={styles.activeLink}><span>Users</span></NavLink>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <a className={styles._itemLink}><span>News</span></a>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <a className={styles._itemLink}><span>Music</span></a>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <a className={styles._itemLink}><span>Settings</span></a>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./DialogItem.module.css\";\r\nimport photo from \"./../../../../img/jpg/avatar.jpg\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"DialogItem block\">\r\n            <NavLink to={\"/dialogs/\" + props.id} className={styles._containerGrid}>\r\n                <div className={`${styles._avatarBox} ${styles.dialogAva}`}>\r\n                    <img className={styles._avatarImg} src={photo}/>\r\n                </div>\r\n                <div className={styles.usernameBox}>\r\n                    <span><strong>{props.name}</strong></span>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport styles from  \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsData.map ( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>)\r\n\r\n    return (\r\n      <div className=\"Dialogs block\">\r\n          <div className={styles._container}>\r\n              <h6 className={styles._header}>Диалоги</h6>\r\n              {dialogsElements}\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React, {useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from 'classnames';\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages: number[] = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n\r\n\r\n        <div className={styles._pagePanel}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={ () => { setPortionNumber(portionNumber - 1) } }\r\n            >Previus\r\n            </button>}\r\n\r\n            {pages\r\n                .filter(el => (el >= leftPortionPageNumber && el <= rightPortionPageNumber))\r\n                .map(p => {\r\n                    return <span className={ cn({[styles.selectedPage]: currentPage === p}, styles.pageNumber) }\r\n                                 onClick={(e) => {onPageChanged(p)}}\r\n                                 key={p}\r\n                    >\r\n                        {p}\r\n                    </span>\r\n                })\r\n            }\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>Next</button>\r\n            }\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport avatarPic from './../../../img/jpg/avatar.jpg';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, follow, unfollow}) => {\r\n\r\n    return (<div className=\"Users block\">\r\n            <div>\r\n                <div className={styles._usersBox1}>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <div className={styles._imgBox}>\r\n                            <img className={styles._img} alt=\"faceAvatar\"\r\n                                 src={user.photos.small !== null ? user.photos.small : avatarPic}/>\r\n                        </div>\r\n                    </NavLink>\r\n                    <div className={styles._followBtnBox}>\r\n\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          unfollow(user.id)\r\n                                      }\r\n                                      }>FOLLOW</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          follow(user.id)\r\n                                      }\r\n                                      }>UNFOLLOW</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={styles._usersBox2}>\r\n                    <div className={styles._personInfoBox1}>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </div>\r\n                    <div className={styles._personInfoBox2}>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React, { FC } from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {UserType} from '../../../types/reduxTypes';\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: UserType[]\r\n    followingInProgress: number[]\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nconst Users: FC<PropsType> = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n\r\n    return <div className=\"Users block\">\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount}\r\n                   pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     follow={props.follow}\r\n                                     unfollow={props.unfollow}\r\n                                     key={u.id}\r\n                />)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from 'reselect';\r\nimport {AppStateType} from './reduxStore';\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow, requestUsers,\r\n    unfollow,\r\n} from '../../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount\r\n} from \"../../../redux/usersSelectors\";\r\nimport {UserType} from '../../../types/reduxTypes';\r\nimport {AppStateType} from '../../../redux/reduxStore';\r\nimport {ReactComponent} from '*.svg';\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    totalUsersCount: number\r\n    users: UserType[]\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    pageTitle: string\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        const {getUsers, currentPage, pageSize} = this.props;\r\n        getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {getUsers, pageSize} = this.props;\r\n        getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <h2>{this.props.pageTitle}</h2>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {follow, unfollow, getUsers: requestUsers}),\r\n) (UsersContainer)","import React from 'react';\r\nimport styles from './Login.module.css';\r\nimport styles2 from './../common/FormsControls/FormsControls.module.css';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from '../../../redux/reduxStore';\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField<LoginFormPropertiesTypeKeys>('Email', 'email', [required], Input)}\r\n            {createField<LoginFormPropertiesTypeKeys>('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField<LoginFormPropertiesTypeKeys>(undefined, 'rememberMe', [required], Input, {type: 'checkbox'}, 'Remember Me')}\r\n            {captchaUrl && <img src={captchaUrl} className={styles.imgCaptcha}/> }\r\n            {captchaUrl && createField<LoginFormPropertiesTypeKeys>('symbols from image', 'captcha', [required], Input, {}) }\r\n            { error && <div className={styles2.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button type={'submit'}>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'}) (LoginForm);\r\n\r\ntype MapStatePropsType = {\r\n    captchaUrl: string | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n\r\n}\r\n\r\nexport type LoginFormValuesType = {\r\n    password: string\r\n    email: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\ntype LoginFormPropertiesTypeKeys = Extract<keyof LoginFormValuesType, string>\r\n\r\nconst Login: React.FC<MapStatePropsType & MapDispatchPropsType> = (props) => {\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return <div className=\"Login block\">\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {login}) (Login);","import React from \"react\";\r\nimport Preloader from \"../Components/Main/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />} >\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React from 'react';\r\nimport {Redirect, Route, withRouter} from 'react-router-dom';\r\nimport styles from './Main.module.css';\r\nimport Navigation from \"./Navigation/Navigation\";\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport UsersContainer from \"./Users/UsersContainer\";\r\nimport LoginPage from \"./Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeMain} from \"../../redux/mainReducer\";\r\nimport Preloader from \"./common/Preloader/Preloader\";\r\nimport {withSuspense} from \"../../hoc/withSuspense\";\r\nimport {AppStateType} from '../../redux/reduxStore';\r\n\r\nconst UserCardContainer = React.lazy(() => import('./UserCard/UserCardContainer'));\r\nconst PublishPostContainer = React.lazy(() => import('./PublishPost/PublishPostContainer'));\r\nconst ChatContainer = React.lazy(() => import('./Chat/ChatContainer'));\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n    initializeMain: () => void\r\n}\r\n\r\nclass Main extends React.Component<MapPropsType & DispatchPropsType> {\r\n\r\n    catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\r\n        alert('some error occured');\r\n        // console.error(promiseRejectionEvent)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeMain();\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <main className=\"Main block\">\r\n                <div className={styles._wrapper}>\r\n                    <div className={styles._container}>\r\n                        <div className={styles._LeftColumn}>\r\n                            <Navigation/>\r\n                        </div>\r\n                        <div className={styles._UserCardColumn}>\r\n                            <Route path='/' render={()=> <Redirect to={'/profile'}/>} />\r\n                            <Route path='/profile/:userId?' render={withSuspense(UserCardContainer)}/>\r\n                            <Route path='/users' render={() => <UsersContainer pageTitle={'Самурай'}/>}/>\r\n                            <Route path='/login' render={() => <LoginPage/>}/>\r\n\r\n                        </div>\r\n                        <div className={styles._NarrowColumn}>\r\n                            <Route path='/dialogs' render={(props) => <Dialogs store={this.props.state}\r\n                                                                          dialogsData={this.props.state.messagesPage.dialogsData}/>}/>\r\n                        </div>\r\n                        <div className={styles._WideColumn}>\r\n                            <Route path='/dialogs'\r\n                                   render={withSuspense(ChatContainer)}/>\r\n                            <Route path='/profile' render={withSuspense(PublishPostContainer)}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    initialized: state.main.initialized,\r\n    state: state\r\n});\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeMain})) (Main);","import React from 'react';\nimport './App.css';\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport Main from \"./Components/Main/Main\";\nimport {HashRouter} from \"react-router-dom\";\n\n\nconst App = (props) => {\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <HeaderContainer />\n                <Main state={props.state} store={props.store} dispatch={props.dispatch}/>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/reduxStore\";\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\n\nlet rerenderEntireTree = (state) => {\n\n    ReactDOM.render(\n        <Provider store={store}>\n        <App state={store.getState()} dispatch={store.dispatch.bind(store)} store={store} />\n        </Provider>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(rerenderEntireTree);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_usersBox2\":\"Users__usersBox2__1WkCj\",\"_imgBox\":\"Users__imgBox__1nJTb\",\"_img\":\"Users__img__12wjw\",\"_pagePanel\":\"Users__pagePanel__OCfK2\",\"_selectedPage\":\"Users__selectedPage__1oMYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_wrapper\":\"Main__wrapper__14kYs\",\"_container\":\"Main__container__3GPhT\",\"_LeftColumn\":\"Main__LeftColumn__1qQxQ\",\"_UserCardColumn\":\"Main__UserCardColumn__Kl8v-\",\"_NarrowColumn\":\"Main__NarrowColumn__WfV85\",\"_WideColumn\":\"Main__WideColumn__3KylI\"};","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\nimport preloader from './../../../../img/svg/doubleRingPreloader40.svg';\r\n\r\nconst Preloader = (props) => {\r\n    return <div className={styles._preloaderBox}>\r\n        <img src={preloader} className={styles._preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_containerGrid\":\"DialogItem__containerGrid__1BOLJ\",\"active\":\"DialogItem_active__5ry9s\",\"_avatarBox\":\"DialogItem__avatarBox__ggp3N\",\"_avatarImg\":\"DialogItem__avatarImg__2pT_6\",\"dialogAva\":\"DialogItem_dialogAva__2rf8c\",\"usernameBox\":\"DialogItem_usernameBox__XXQXS\"};","export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: FieldValidatorType = (value: string): string | undefined => {\r\n    return value ? undefined : 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (max: number): FieldValidatorType => (value) => {\r\n    return value.length > max ? `Max length is ${max} symbols` : undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_pagePanel\":\"Paginator__pagePanel__1ulN9\",\"_selectedPage\":\"Paginator__selectedPage__1Y88W\",\"paginator\":\"Paginator_paginator__g-vUZ\",\"pageNumber\":\"Paginator_pageNumber__2-vpR\",\"selectedPage\":\"Paginator_selectedPage__3A3Zw\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.93a43109.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_wrapper\":\"Header__wrapper__1ZUa2\",\"_container\":\"Header__container__1y67T\",\"_loginBox\":\"Header__loginBox__KK7ad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"Dialogs__container__1Bl9s\",\"_header\":\"Dialogs__header__1T2MF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_preloaderBox\":\"Preloader__preloaderBox__1zliy\"};"],"sourceRoot":""}