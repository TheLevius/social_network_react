{"version":3,"sources":["Components/Main/Users/Users.module.css","img/jpg/avatar.jpg","Components/Main/Main.module.css","Components/Main/PublishPost/PublishPost.module.css","Components/Main/UserCard/Initials/Initials.module.css","Components/Main/Dialogs/DialogItem/DialogItem.module.css","Components/Main/Navigation/Navigation.module.css","Components/Main/PublishPost/PostedCard/PostedCard.module.css","Components/Main/UserCard/UserCard.module.css","Components/Main/UserCard/AvatarPic/AvatarPic.module.css","Components/Header/Header.module.css","Components/Main/Dialogs/Dialogs.module.css","Components/Header/Logo/Logo.module.css","img/svg/logotype.svg","Components/Main/Chat/Chat.module.css","serviceWorker.js","redux/profileReducer.js","redux/messagesReducer.js","redux/sidebarReducer.js","redux/usersReducer.js","redux/reduxStore.js","Components/Header/Logo/Logo.jsx","Components/Header/Header.jsx","Components/Main/Navigation/Navigation.jsx","Components/Main/UserCard/AvatarPic/AvatarPic.jsx","Components/Main/UserCard/Initials/Initials.jsx","Components/Main/UserCard/UserCard.jsx","Components/Main/Dialogs/DialogItem/DialogItem.jsx","Components/Main/Dialogs/Dialogs.jsx","Components/Main/Chat/Chat.jsx","Components/Main/Chat/ChatContainer.jsx","Components/Main/PublishPost/PostedCard/PostedCard.jsx","Components/Main/PublishPost/PublishPost.jsx","Components/Main/PublishPost/PublishPostContainer.jsx","Components/Main/Users/Users.jsx","Components/Main/Users/UsersContainer.jsx","Components/Main/Main.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","postData","id","message","likesCount","newPostText","profileReducer","state","action","type","newPost","newText","dialogsData","name","messagesData","isSelf","newMessageBody","messagesReducer","body","sidebarReducer","users","pageSize","totalUsersCount","currentPage","usersReducer","map","u","userId","followed","count","reducers","combineReducers","profilePage","messagesPage","sidebar","usersPage","store","createStore","Logo","className","styles","_homelink","href","src","Logosvg","alt","Header","_wrapper","_container","Navigation","_containerNav","_item","to","_itemLink","activeClassName","activeLink","_notifyCell","AvatarPic","_box","userCard","_photo","photo","Initials","_column","_username","_sepLine","_statusBox","_statusString","UserCard","_containerGrid","wallpaper","_AvatarCol","_initialsCol","DialogItem","props","_avatarBox","dialogAva","_avatarImg","usernameBox","Dialogs","dialogsElements","dialog","key","_header","Chat","el","sender","msgCont","_selfMsgCell","msgAva","_selfAvaCell","_userMsgCell","_userAvaCell","_avaImg","userpic","newMsgBody","msgInputBox","value","onChange","e","target","updateNewMsgBody","placeholder","btnSendMsgBox","btnSendMsg","onClick","sendMessage","ChatContainer","connect","dispatch","updateNewMessageBodyCreator","PostedCard","_postParagraph","_postLikesCount","PublishPost","posts","newPostElement","React","createRef","_textareaCell","ref","text","current","updateNewPostText","_buttonPub","addPost","PublishPostContainer","updateNewPostTextActionCreator","Users","pagesCount","Math","ceil","pages","i","push","_pagePanel","p","_selectedPage","onPageChanged","_usersBox1","_imgBox","_img","photos","small","avatarPic","_followBtnBox","unfollow","follow","_usersBox2","_personInfoBox1","status","_personInfoBox2","UsersContainer","pageNumber","setCurrentPage","axios","then","response","setUsers","data","items","this","setTotalUsersCount","totalCount","Component","followAC","unfollowAC","setUsersAC","Main","_LeftColumn","_UserCardColumn","path","component","render","_NarrowColumn","_WideColumn","App","rerenderEntireTree","ReactDOM","getState","bind","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.224b7b74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"_usersBox2\":\"Users__usersBox2__3IRqk\",\"_imgBox\":\"Users__imgBox__2ckdf\",\"_img\":\"Users__img__pU4mp\",\"_pagePanel\":\"Users__pagePanel__p94zz\",\"_selectedPage\":\"Users__selectedPage__268hK\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.93a43109.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_wrapper\":\"Main__wrapper__3KhWN\",\"_container\":\"Main__container__zR9gb\",\"_LeftColumn\":\"Main__LeftColumn__2H_cG\",\"_UserCardColumn\":\"Main__UserCardColumn__1g21U\",\"_NarrowColumn\":\"Main__NarrowColumn__DG8jf\",\"_WideColumn\":\"Main__WideColumn__NmeeD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"PublishPost__container__263BV\",\"_box\":\"PublishPost__box__5NTH1\",\"_header\":\"PublishPost__header__2GwuU\",\"_containerGrid\":\"PublishPost__containerGrid__i0YZ_\",\"_textareaCell\":\"PublishPost__textareaCell__1WjNI\",\"_buttonPub\":\"PublishPost__buttonPub__1aanN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_column\":\"Initials__column__3j-y3\",\"_username\":\"Initials__username__25FLQ\",\"_sepLine\":\"Initials__sepLine__3i_UQ\",\"_statusBox\":\"Initials__statusBox__2SZX2\",\"_statusString\":\"Initials__statusString__1izTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_containerGrid\":\"DialogItem__containerGrid__MJ1JW\",\"active\":\"DialogItem_active__AitXm\",\"_avatarBox\":\"DialogItem__avatarBox__SRWLZ\",\"_avatarImg\":\"DialogItem__avatarImg__2X2bU\",\"dialogAva\":\"DialogItem_dialogAva__Devnp\",\"usernameBox\":\"DialogItem_usernameBox__2oLL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_containerNav\":\"Navigation__containerNav__2StvC\",\"_item\":\"Navigation__item__1uVYi\",\"_itemLink\":\"Navigation__itemLink__2Y2lf\",\"activeLink\":\"Navigation_activeLink__1k0SY\",\"_notifyCell\":\"Navigation__notifyCell__2gZt6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"PostedCard__container__27-Yt\",\"_header\":\"PostedCard__header__3idbI\",\"_containerGrid\":\"PostedCard__containerGrid__3pRgu\",\"_postLikesCount\":\"PostedCard__postLikesCount__3aXEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_containerGrid\":\"UserCard__containerGrid__1hAvt\",\"wallpaper\":\"UserCard_wallpaper__EftOv\",\"_AvatarCol\":\"UserCard__AvatarCol__2Bggv\",\"_initialsCol\":\"UserCard__initialsCol__MwlLx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_box\":\"AvatarPic__box__25PvT\",\"_photo\":\"AvatarPic__photo__1NTgY\",\"userCard\":\"AvatarPic_userCard__q9Y7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_wrapper\":\"Header__wrapper__2CCMG\",\"_container\":\"Header__container__2qyNq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"Dialogs__container__3zZ58\",\"_header\":\"Dialogs__header__10hOP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_homelink\":\"Logo__homelink__2c31_\"};","module.exports = __webpack_public_path__ + \"static/media/logotype.d56e57dd.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"Chat__container__3wIQ1\",\"_header\":\"Chat__header__ubSM8\",\"_containerGrid\":\"Chat__containerGrid__3Jl2y\",\"_selfAvaCell\":\"Chat__selfAvaCell__1Bh4w\",\"_userAvaCell\":\"Chat__userAvaCell__giSDu\",\"_avaImg\":\"Chat__avaImg__2dO44\",\"_userMsgCell\":\"Chat__userMsgCell__2WT5Z\",\"_selfMsgCell\":\"Chat__selfMsgCell__2YjxY\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s, my first post', likesCount: 11},\r\n        {id: 3, message: 'Hi, какой-то пост', likesCount: 15},\r\n    ],\r\n    newPostText: 'it-incubator'\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {id: 5, message: state.newPostText, likesCount: 0};\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const updateNewPostTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\n\r\n","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Nikita'},\r\n        {id: 2, name: 'Vladimir'},\r\n        {id: 3, name: 'Misha'},\r\n        {id: 4, name: 'Sergey'},\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: 'Hi', isSelf: false},\r\n        {id: 2, message: 'How is your it-kamasutra?', isSelf: true},\r\n        {id: 3, message: 'Yo', isSelf: false},\r\n        {id: 4, message: 'Hi', isSelf: true},\r\n        {id: 5, message: 'Hi', isSelf: false},\r\n        {id: 6, message: 'Hi', isSelf: true},\r\n        {id: 6, message: 'dfsdf', isSelf: false},\r\n        {id: 6, message: 'Hi', isSelf: true},\r\n    ],\r\n    newMessageBody: \"\"\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messagesData: [...state.messagesData, {id: 6, message: body, isSelf: true}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE})\r\nexport const updateNewMessageBodyCreator = (body) => {\r\n    return {type: UPDATE_NEW_MESSAGE_BODY, body: body}\r\n};\r\n\r\nexport default messagesReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    newPostText: ''\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u => {\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    } return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u => {\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    } return u;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {...state,\r\n                users: action.users\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followAC = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPageAC = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCountAC = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\n\r\nexport default usersReducer;\r\n\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport styles from './Logo.module.css';\r\nimport Logosvg from '../../../img/svg/logotype.svg';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"Logo block block_inline\">\r\n            <a className={styles._homelink} href=\"#homelink\" id=\"homelink\">\r\n                <img src={Logosvg} alt=\"homelink\"/>\r\n                <span>Petfans</span>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport Logo from \"./Logo/Logo\";\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={'Header block'}>\r\n            <div className={styles._wrapper}>\r\n                <div className={styles._container}>\r\n                    <Logo/>\r\n                </div>\r\n            </div>\r\n        </header>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./Navigation.module.css\";\r\n\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <nav className=\"Navigation block\">\r\n            <ul className={styles._containerNav}>\r\n                <li className={styles._item}>\r\n                    <NavLink to='/profile' className={styles._itemLink} activeClassName={styles.activeLink}><span>Profile</span></NavLink>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <NavLink to='/dialogs' className={styles._itemLink} activeClassName={styles.activeLink}><span>Messages</span></NavLink>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <NavLink to='/users' className={styles._itemLink} activeClassName={styles.activeLink}><span>Users</span></NavLink>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <a className={styles._itemLink}><span>News</span></a>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <a className={styles._itemLink}><span>Music</span></a>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n                <li className={styles._item}>\r\n                    <a className={styles._itemLink}><span>Settings</span></a>\r\n                    <div className={styles._notifyCell}><span>99</span></div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport styles from \"./AvatarPic.module.css\";\r\nimport photo from \"./../../../../img/jpg/avatar.jpg\";\r\n\r\nconst AvatarPic = () => {\r\n    return (\r\n        <div className=\"AvatarPic block\">\r\n            <div className={`${styles._box} ${styles.userCard}`}>\r\n                <img className={styles._photo} src={photo}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AvatarPic;","import React from \"react\";\r\nimport styles from \"./Initials.module.css\";\r\n\r\nconst Initials = () => {\r\n    return (\r\n      <div className=\"Initials block\">\r\n          <div className={styles._column}>\r\n              <div className={styles._username}>\r\n                  <span>Nikita Levitski</span>\r\n              </div>\r\n              <hr className={styles._sepLine} />\r\n              <div className={styles._statusBox}>\r\n                  <span className={styles._statusString}>\r\n                      Junior Front-end developer (в мечтах)<br />Google Material Design UI React+Redux\r\n                  </span>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Initials;","import React from 'react';\r\nimport styles from './UserCard.module.css';\r\nimport AvatarPic from \"./AvatarPic/AvatarPic\";\r\nimport Initials from \"./Initials/Initials\";\r\n\r\n\r\nconst UserCard = () => {\r\n    return (\r\n        <div className=\"UserCard block\">\r\n            <div className={`${styles._containerGrid} ${styles.wallpaper}`}>\r\n                <div className={styles._AvatarCol}>\r\n                    <AvatarPic/>\r\n                </div>\r\n                <div className={styles._initialsCol}>\r\n                    <Initials/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserCard;\r\n\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./DialogItem.module.css\";\r\nimport photo from \"./../../../../img/jpg/avatar.jpg\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"DialogItem block\">\r\n            <NavLink to={\"/dialogs/\" + props.id} className={styles._containerGrid}>\r\n                <div className={`${styles._avatarBox} ${styles.dialogAva}`}>\r\n                    <img className={styles._avatarImg} src={photo}/>\r\n                </div>\r\n                <div className={styles.usernameBox}>\r\n                    <span><strong>{props.name}</strong></span>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport styles from  \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsData.map ( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>)\r\n\r\n    return (\r\n      <div className=\"Dialogs block\">\r\n          <div className={styles._container}>\r\n              <h6 className={styles._header}>Диалоги</h6>\r\n              {dialogsElements}\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport styles from \"./Chat.module.css\";\r\nimport userpic from \"./../../../img/jpg/avatar.jpg\";\r\n\r\nconst Chat = (props) => {\r\n    let state = props.messagesPage;\r\n\r\n    let message = state.messagesData.map( (el)=> {\r\n\r\n        let sender = el.isSelf ?  {msgCont: styles._selfMsgCell, msgAva: styles._selfAvaCell}\r\n            : {msgCont: styles._userMsgCell, msgAva: styles._userAvaCell};\r\n\r\n        return (\r\n            <div className={styles._containerGrid}>\r\n                <div className={sender.msgAva}>\r\n                    <img className={styles._avaImg} src={userpic}/>\r\n                </div>\r\n                <div className={sender.msgCont}>\r\n                    <span>{el.message}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    let newMsgBody = state.newMessageBody;\r\n\r\n    let onSendMsgClick = () => {\r\n        props.sendMessage();\r\n    };\r\n\r\n    let onNewMsgChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMsgBody(body);\r\n    };\r\n    return (\r\n        <div className=\"Chat block\">\r\n            <div className={styles._container}>\r\n                <h6 className={styles._header}>Чат</h6>\r\n                {message}\r\n                <div className={styles._containerGrid}>\r\n                    <div className={styles.msgInputBox}>\r\n                        <textarea value={newMsgBody} onChange={onNewMsgChange} placeholder=\"Написать сообщение...\" />\r\n                    </div>\r\n                    <div className={styles.btnSendMsgBox}>\r\n                        <button className={styles.btnSendMsg} onClick={onSendMsgClick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;","import React from \"react\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"./../../../redux/messagesReducer\";\r\nimport Chat from \"./Chat\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        },\r\n        updateNewMsgBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        }\r\n    }\r\n};\r\n\r\nconst ChatContainer = connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n\r\nexport default ChatContainer;","import React from \"react\";\r\nimport styles from \"./PostedCard.module.css\";\r\n\r\nconst PostedCard = (props) => {\r\n    return (\r\n        <div className=\"PostedCard block\">\r\n            <div className={styles._container}>\r\n                <h6 className={styles._header}>Пост</h6>\r\n                <div className={styles._containerGrid}>\r\n                    <p className={styles._postParagraph}>\r\n                        {props.message}\r\n                    </p>\r\n                    <div className={styles._postLikesCount}>\r\n                        <span>Likes: {props.likesCount}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostedCard;","import React from \"react\";\r\nimport styles from \"./PublishPost.module.css\";\r\nimport PostedCard from \"./PostedCard/PostedCard\";\r\n\r\nconst PublishPost = (props) => {\r\n\r\n    let posts = props.postData.map( el => <PostedCard message={el.message} likesCount={el.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"PublishPost block\">\r\n            <div className={styles._container}>\r\n                <div className={styles._box}>\r\n                    <h6 className={styles._header}>Опубликовать пост</h6>\r\n                    <div className={styles._containerGrid}>\r\n                    <textarea className={styles._textareaCell}\r\n                              placeholder=\"Написать...\"\r\n                              ref={newPostElement}\r\n                              value={props.newPostText}\r\n                              onChange={onPostChange} />\r\n\r\n                        <button type=\"submit\" className={styles._buttonPub} onClick={onAddPost}>Написать</button>\r\n                    </div>\r\n                </div>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PublishPost;","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profileReducer\";\r\nimport PublishPost from \"./PublishPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        }\r\n    }\r\n};\r\n\r\nconst PublishPostContainer = connect(mapStateToProps, mapDispatchToProps)(PublishPost);\r\n\r\nexport default PublishPostContainer;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport avatarPic from './../../../img/jpg/avatar.jpg';\r\n\r\nconst Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n        debugger\r\n    }\r\n\r\n    return <div className=\"Users block\">\r\n        <div className={styles._pagePanel}>\r\n\r\n            {pages.map( p => {\r\n                return <span className={props.currentPage === p && styles._selectedPage} onClick={(e) => {props.onPageChanged(p)}}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id} >\r\n                <div className={styles._usersBox1}>\r\n                    <div className={styles._imgBox}>\r\n                        <img className={styles._img} alt=\"faceAvatar\" src={u.photos.small !== null ? u.photos.small: avatarPic}/>\r\n                    </div>\r\n                    <div className={styles._followBtnBox}>\r\n                        {u.followed\r\n                            ? <button onClick={ () => props.unfollow(u.id) }>FOLLOW</button>\r\n                            : <button onClick={ () => props.follow(u.id) }>UNFOLLOW</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={styles._usersBox2}>\r\n                    <div className={styles._personInfoBox1}>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </div>\r\n                    <div className={styles._personInfoBox2}>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {followAC, setCurrentPageAC, setTotalUsersCountAC, setUsersAC, unfollowAC} from \"../../../redux/usersReducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        });\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Users totalUsersCount={this.props.totalUsersCount}\r\n                      pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage}\r\n                      onPageChanged={this.onPageChanged}\r\n                      users={this.props.users}\r\n                      follow={this.props.follow}\r\n                      unfollow={this.props.unfollow}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber));\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount));\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","import React from 'react';\r\nimport {Route} from \"react-router-dom\";\r\nimport styles from './Main.module.css';\r\nimport Navigation from \"./Navigation/Navigation\";\r\nimport UserCard from \"./UserCard/UserCard\";\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport ChatContainer from \"./Chat/ChatContainer\";\r\nimport PublishPostContainer from \"./PublishPost/PublishPostContainer\";\r\nimport UsersContainer from \"./Users/UsersContainer\";\r\n\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <main className=\"Main block\">\r\n            <div className={styles._wrapper}>\r\n                <div className={styles._container}>\r\n                    <div className={styles._LeftColumn}>\r\n                        <Navigation/>\r\n                    </div>\r\n                    <div className={styles._UserCardColumn}>\r\n                        <Route path='/profile' component={UserCard}/>\r\n                        <Route path='/users' render={() => <UsersContainer/>} />\r\n                    </div>\r\n                    <div className={styles._NarrowColumn}>\r\n                        <Route path='/dialogs' render={ () => <Dialogs store={props.store} dialogsData={props.state.messagesPage.dialogsData}/> } />\r\n                    </div>\r\n                    <div className={styles._WideColumn}>\r\n                        <Route path='/dialogs' render={ () => <ChatContainer messagesPage={props.state.messagesPage} store={props.store} dispatch={props.dispatch}/> } />\r\n                        <Route path='/profile' render={ () => <PublishPostContainer\r\n                            postData={props.state.profilePage.postData}\r\n                            newPostText={props.state.profilePage.newPostText}\r\n                            dispatch={props.dispatch}\r\n                            store={props.store}\r\n                        />}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport Main from \"./Components/Main/Main\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst App = (props) => {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Header/>\n                <Main state={props.state} store={props.store} dispatch={props.dispatch} updateNewPostText={props.updateNewPostText}/>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/reduxStore\";\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\n\nlet rerenderEntireTree = (state) => {\n\n    ReactDOM.render(\n        <Provider store={store}>\n        <App state={store.getState()} dispatch={store.dispatch.bind(store)} store={store} />\n        </Provider>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(rerenderEntireTree);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}