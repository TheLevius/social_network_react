{"version":3,"sources":["Components/MyPosts/MyPosts.module.css","Components/MyPosts/PostedCard/PostedCard.module.css","Components/MyPosts/PostedCard/PostedCard.tsx","Components/MyPosts/AddPostForm/AddPostForm.tsx","Components/MyPosts/MyPosts.tsx","Components/MyPosts/MyPostsContainer.tsx"],"names":["module","exports","PostedCard","props","className","styles","_container","_header","_containerGrid","_postParagraph","message","_postLikesCount","likesCount","reduxForm","form","onSubmit","handleSubmit","createField","required","Input","MyPostsMemoized","React","memo","dispatch","useDispatch","postsElements","postData","map","el","key","id","_box","values","addPost","newPostText","reset","MyPostsContainer","connect","state","profilePage","actions","addPostActionCreator","MyPosts"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,WAAa,4BAA4B,KAAO,sBAAsB,QAAU,yBAAyB,eAAiB,gCAAgC,cAAgB,+BAA+B,WAAa,8B,oBCAxOD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,QAAU,4BAA4B,eAAiB,mCAAmC,gBAAkB,sC,yGCyB3JC,EAlByB,SAAAC,GACpC,OACI,yBAAKC,UAAU,oBACX,yBAAKA,UAAWC,IAAOC,YACnB,wBAAIF,UAAWC,IAAOE,SAAtB,4BACA,yBAAKH,UAAWC,IAAOG,gBACnB,uBAAGJ,UAAWC,IAAOI,gBAChBN,EAAMO,SAEX,yBAAKN,UAAWC,IAAOM,iBACnB,wCAAcR,EAAMS,iB,yCCU7BC,cAA4C,CAACC,KAAM,qBAAnDD,EAbgF,SAACV,GAC5F,OACI,0BAAMY,SAAUZ,EAAMa,cAClB,6BACKC,YAAuC,WAAY,cAAe,CAACC,KAAWC,MAEnF,6BACI,iDCoBDC,EAFSC,IAAMC,MAxB8B,SAACnB,GACzD,IAAMoB,EAAWC,cAEbC,EAAgBtB,EAAMuB,SAASC,KAAK,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAGE,GAAIpB,QAASkB,EAAGlB,QAASE,WAAYgB,EAAGhB,gBAO1G,OAEI,yBAAKR,UAAU,qBACX,yBAAKA,UAAWC,IAAOC,YACnB,yBAAKF,UAAWC,IAAO0B,MACnB,wBAAI3B,UAAWC,IAAOE,SAAtB,qGACA,kBAAC,EAAD,CAAaQ,SAXb,SAACiB,GACb7B,EAAM8B,QAAQD,EAAOE,aACrBX,EAASY,YAAM,8BAWNV,OCrBXW,EAAmBC,aAND,SAACC,GACrB,MAAO,CACHZ,SAAUY,EAAMC,YAAYb,YAIiE,CACjGO,QAASO,IAAQC,sBADIJ,CAEtBK,GAEYN","file":"static/js/4.4b77d0df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"MyPosts__container__14-u_\",\"_box\":\"MyPosts__box__2F4_w\",\"_header\":\"MyPosts__header__2bBoE\",\"_containerGrid\":\"MyPosts__containerGrid__pzKyJ\",\"_textareaCell\":\"MyPosts__textareaCell__1e-9K\",\"_buttonPub\":\"MyPosts__buttonPub__1STaC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_container\":\"PostedCard__container__1Qvcf\",\"_header\":\"PostedCard__header__2As6_\",\"_containerGrid\":\"PostedCard__containerGrid__3sbdB\",\"_postLikesCount\":\"PostedCard__postLikesCount__2VSQQ\"};","import React from \"react\";\r\nimport styles from \"./PostedCard.module.css\";\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nconst PostedCard: React.FC<PropsType> = props => {\r\n    return (\r\n        <div className=\"PostedCard block\">\r\n            <div className={styles._container}>\r\n                <h6 className={styles._header}>Пост</h6>\r\n                <div className={styles._containerGrid}>\r\n                    <p className={styles._postParagraph}>\r\n                        {props.message}\r\n                    </p>\r\n                    <div className={styles._postLikesCount}>\r\n                        <span>Likes: {props.likesCount}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostedCard;","import React from 'react';\r\nimport {InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {createField, GetStringKeys, Input} from '../../common/FormsControls/FormsControls';\r\nimport {required} from '../../../utils/validators/validators';\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport type AddPostFormValuesType = {\r\n    newPostText: string\r\n}\r\n\r\ntype AddPostFormValuesTypeKeys = GetStringKeys<AddPostFormValuesType>\r\n\r\nconst AddPostForm: React.FC<InjectedFormProps<AddPostFormValuesType, PropsType> & PropsType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {createField<AddPostFormValuesTypeKeys>(\"Add post\", 'newPostText', [required], Input) }\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm<AddPostFormValuesType, PropsType>({form: 'userCard-add-post'})(AddPostForm)","import React from \"react\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport PostedCard from \"./PostedCard/PostedCard\";\r\nimport {reset} from \"redux-form\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport AddPostForm, { AddPostFormValuesType } from './AddPostForm/AddPostForm';\r\nimport {PostType} from '../../types/reduxTypes';\r\n\r\n\r\nexport type MapPropsType = {\r\n    postData: PostType[]\r\n}\r\nexport type DispatchPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nconst MyPosts: React.FC<MapPropsType & DispatchPropsType> = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    let postsElements = props.postData.map( el => <PostedCard key={el.id} message={el.message} likesCount={el.likesCount}/>);\r\n\r\n    let onAddPost = (values: AddPostFormValuesType) => {\r\n        props.addPost(values.newPostText);\r\n        dispatch(reset('ProfileAddNewPostForm'));\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"PublishPost block\">\r\n            <div className={styles._container}>\r\n                <div className={styles._box}>\r\n                    <h6 className={styles._header}>Опубликовать пост</h6>\r\n                    <AddPostForm onSubmit={onAddPost} />\r\n                </div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MyPostsMemoized = React.memo(MyPosts);\r\n\r\nexport default MyPostsMemoized;","import React from \"react\";\r\nimport {actions} from \"../../redux/profileReducer\";\r\nimport MyPosts, {DispatchPropsType, MapPropsType} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from '../../redux/reduxStore';\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        postData: state.profilePage.postData\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect<MapPropsType, DispatchPropsType, {}, AppStateType>(mapStateToProps, {\r\n    addPost: actions.addPostActionCreator\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;"],"sourceRoot":""}